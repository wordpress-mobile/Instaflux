plugins {
    // Those declarations are just a workaround for a false-positive Kotlin Gradle Plugin warning
    // https://youtrack.jetbrains.com/issue/KT-46200
    id "com.android.application" apply false
    id "org.jetbrains.kotlin.android" apply false
    id "org.jetbrains.kotlin.android.extensions" apply false
    id "org.jetbrains.kotlin.jvm" apply false
    id "org.jetbrains.kotlin.kapt" apply false

    id "com.automattic.android.fetchstyle"
    id "com.automattic.android.configure"
}

allprojects {
    apply plugin: 'checkstyle'

    repositories {
        google()
        jcenter()
        mavenCentral()
    }

    task checkstyle(type: Checkstyle) {
        source 'src'

        classpath = files()
    }

    checkstyle {
        toolVersion = '8.3'
        configFile file("${project.rootDir}/config/checkstyle.xml")
    }
}

subprojects {
    configurations {
        ktlint
    }

    dependencies {
        ktlint 'com.github.shyiko:ktlint:0.31.0'
    }

    task ktlint(type: JavaExec) {
        main = "com.github.shyiko.ktlint.Main"
        classpath = configurations.ktlint
        args "src/**/*.kt"
    }

    task ktlintFormat(type: JavaExec) {
        main = "com.github.shyiko.ktlint.Main"
        classpath = configurations.ktlint
        args "-F", "src/**/*.kt"
    }
}

ext {
    daggerVersion = '2.29.1'
    wellSqlVersion = '1.6.0'
    supportLibraryVersion = '27.1.1'
    arch_paging_version = '1.0.1'
    arch_lifecycle_version = '1.1.1'
    arch_core_version = '2.0.1'
    appcompat_version = '1.0.2'
    mockitoVersion = '3.3.3'
    assertJVersion = '3.19.0'
    kotlinCoroutinesVersion = '1.3.9'
    roomVersion = "2.3.0"
}

allprojects {
    configurations.all {
        resolutionStrategy.dependencySubstitution {
            if (project.hasProperty("fluxcAnnotationsVersion")) {
                substitute project(":fluxc-annotations") because "" with module("org.wordpress.fluxc:fluxc-annotations:${project.getProperty("fluxcAnnotationsVersion")}")
            }
            if (project.hasProperty("fluxcProcessorVersion")) {
                substitute project(":fluxc-processor") with module("org.wordpress.fluxc:fluxc-processor:${project.getProperty("fluxcProcessorVersion")}")
            }
            if (project.hasProperty("fluxcVersion")) {
                substitute project(":fluxc") with module("org.wordpress:fluxc:${project.getProperty("fluxcVersion")}")
            }
        }
    }
}
